{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/Btn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport style from \"../css/Btn.css\";\nimport useValores from \"../hooks/useValores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Btn = _ref => {\n  _s();\n  let {\n    numero,\n    valor,\n    setValor,\n    teclaFuncion\n  } = _ref;\n  const ejemplo = useValores();\n  const handleClick = e => {\n    e.persist();\n    if (teclaFuncion === true) {\n      if (numero === \"+\") {\n        console.log(\"Suma\");\n        if (ejemplo.A === 0) {\n          ejemplo.A = valor;\n          setValor(0);\n        }\n        ejemplo.operacion = \"+\";\n      } else if (numero === \"-\") {\n        console.log(\"Resta\");\n        if (ejemplo.A === 0) {\n          ejemplo.A = valor;\n          setValor(0);\n        }\n        ejemplo.operacion = \"-\";\n      } else if (numero === \"*\") {\n        console.log(\"Multiplicacion\");\n        if (ejemplo.A === 0) {\n          ejemplo.A = valor;\n          setValor(0);\n        }\n        ejemplo.operacion = \"*\";\n      } else if (numero === \"/\") {\n        console.log(\"Division\");\n        if (ejemplo.A === 0) {\n          ejemplo.A = valor;\n          setValor(0);\n        }\n        ejemplo.operacion = \"/\";\n      } else if (numero === \"C\") {\n        setValor(0);\n        ejemplo.A = 0;\n        ejemplo.A = 0;\n        ejemplo.operacion = null;\n      } else if (numero === \"=\") {\n        if (valor === 0) {\n          setValor(\"Error -- La division entre cero no esta definida --\");\n        } else {\n          ejemplo.B = valor;\n          ejemplo.r = eval(parseInt(ejemplo.A) + ejemplo.operacion + parseInt(ejemplo.B));\n          setValor(ejemplo.r);\n          ejemplo.A = 0;\n          ejemplo.A = 0;\n          ejemplo.operacion = null;\n        }\n      }\n    } else {\n      setValor(valor === 0 ? numero : valor.toString() + numero);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    onClick: handleClick,\n    children: numero\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Btn, \"fZPVn0+pc0mwER/dujw4uon09pk=\", false, function () {\n  return [useValores];\n});\n_c = Btn;\nexport default Btn;\nvar _c;\n$RefreshReg$(_c, \"Btn\");","map":{"version":3,"names":["React","useState","style","useValores","Btn","numero","valor","setValor","teclaFuncion","ejemplo","handleClick","e","persist","console","log","A","operacion","B","r","eval","parseInt","toString"],"sources":["/frontend/src/components/Btn.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport style from \"../css/Btn.css\"\nimport useValores from \"../hooks/useValores\";\n\nconst Btn =({numero,valor,setValor,teclaFuncion})=>{\n    const ejemplo = useValores();\n    const handleClick=(e)=>{\n        e.persist();\n        if(teclaFuncion===true){\n            if(numero===\"+\"){\n                console.log(\"Suma\");\n                if(ejemplo.A===0){\n                    ejemplo.A=valor;\n                    setValor(0);\n                }\n                ejemplo.operacion=\"+\";\n            }else if(numero===\"-\"){\n                console.log(\"Resta\");\n                if(ejemplo.A===0){\n                    ejemplo.A=valor;\n                    setValor(0);\n                }\n                ejemplo.operacion=\"-\";\n            }else if(numero===\"*\"){\n                console.log(\"Multiplicacion\");\n                if(ejemplo.A===0){\n                    ejemplo.A=valor;\n                    setValor(0);\n                }\n                ejemplo.operacion=\"*\";\n            }else if(numero===\"/\"){\n                console.log(\"Division\");\n                if(ejemplo.A===0){\n                    ejemplo.A=valor;\n                    setValor(0);\n                }\n                ejemplo.operacion=\"/\";\n            }else if(numero===\"C\"){\n                setValor(0);\n                ejemplo.A=0;\n                ejemplo.A=0;\n                ejemplo.operacion=null\n            }else if(numero===\"=\"){\n                if(valor===0){\n                    setValor(\"Error -- La division entre cero no esta definida --\");\n                }else{\n                    ejemplo.B=valor;\n                    ejemplo.r=eval(parseInt(ejemplo.A) + ejemplo.operacion +parseInt(ejemplo.B));\n                    setValor(ejemplo.r);\n                    ejemplo.A=0;\n                    ejemplo.A=0;\n                    ejemplo.operacion=null\n                }\n                \n            }\n        }else{\n            setValor(valor===0 ? numero : valor.toString() + numero);\n        }\n        \n    }\n\n    return(\n        <div className=\"column\" onClick={handleClick}>{numero}</div>\n    );\n}\n\nexport default Btn;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}